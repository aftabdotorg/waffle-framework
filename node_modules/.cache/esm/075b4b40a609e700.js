let createServer;_a60‍.x([["default",()=>_a60‍.o]]);_a60‍.w("http",[["createServer",["createServer"],function(v){createServer=v}]]);

class Waffle {
  constructor() {
    this._routes = new Map();
  }

  get(path, handler) {
    this._routes.set(path, handler);
  }

  send(res) {
    return (content, status = 200, contentType = 'text/plain') => {
      res.writeHead(status, { 'Content-Type': contentType });
      res.end(content);
    };
  }

  _router(path, res) {
    let routeHandler = this._routes.get(path);
    return routeHandler
      ? routeHandler(res)
      : res.send('<h2>Route not found!</h2>', 404, 'text/html');
  }

  // ! (port num, callback function)
  start(port, cd) {
    return createServer((req, res) => {
      const routePath = req.url.toLowerCase();
      res.send = this.send(res);
      // * route req to handler function

      return this._router(routePath, res);
    }).listen(port, cb);
  }
}

_a60‍.d(Waffle);
